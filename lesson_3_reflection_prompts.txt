When would you want to use a remote repository rather than keeping all your work
local?

    when working with more than one person or working from more than one machine.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    because if a pull is done before your work is staged commited and pushed. all progress will be lost 
    because pulling repository makes you local branch match your remote branch.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    a fork is a clone of someone elses repository made on GitHub. 
    This edited version can be edited without changing the code of the original repository.
    where as a clone is cope of someone's remote repository to your local machine.
    a branch is the cronologically ordered commits located inside a repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    this is benefitial because you may have forgotten about work that was done and not pushed 
    and you would be able compare the file and make changes if needed.      

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    while there are other older version control software out there. 
    Being new to the programing world i would email a copie of my text file showing my code. 
    Which may be both easier and harder. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    when working with others or working on experimental updates.
    Working on a seperate branch helps to remove the fear of breaking the code.
    when working with others it allos for smooth integration of ner features.
